(()=>{"use strict";class e{home;constructor(){this.home=document.createElement("section"),this.home.classList.add("dsa")}}class t{login;constructor(){this.login=document.createElement("section")}}class o{title;logo;icon;constructor(){this.logo=document.createElement("div"),this.logo.classList.add("logo"),this.icon=document.createElement("div"),this.icon.classList.add("logo__icon"),this.title=document.createElement("h1"),this.title.classList.add("logo__title"),this.title.textContent="Trello-clone",this.logo.append(this.icon,this.title)}}class i{header;logo;constructor(){this.header=document.createElement("header"),this.header.classList.add("header"),this.logo=new o}}class s{user;header;constructor(){this.user=document.createElement("div"),this.header=new i,this.user.append(this.header.header)}init(e){console.log(e)}}const n=new e,r=new t,c=new s,d=document.body,h=()=>{const e=window.location.pathname;let t=!0;[/home/g,/login/g,/user\/([\w]+?)\b/g].forEach((o=>{const i=e.match(o);if(i){if(t=!1,i[0].includes("home"))return void d.append(n.home);if(i[0].includes("login"))return void d.append(r.login);if(i[0].includes("user"))return c.init(i[0]),void d.append(c.user)}})),t&&("/"===e?d.append(n.home):d.innerHTML="error")};window.onpopstate=h,h(),(new class{home;login;body;user;constructor(){this.home=new e,this.login=new t,this.user=new s,this.body=document.body}start(){}openPage(){const e=window.location.pathname;let t=!0;[/home/g,/login/g,/user\/([\w]+?)\b/g].forEach((o=>{const i=e.match(o);if(i){if(t=!1,i[0].includes("home"))return void this.body.append(this.home.home);if(i[0].includes("login"))return void this.body.append(this.login.login);if(i[0].includes("user"))return this.user.init(i[0]),void this.body.append(this.user.user)}})),t&&("/"===e?this.body.append(this.home.home):this.body.innerHTML="error")}}).start()})();